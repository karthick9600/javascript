//Promise 
// // Example -1

// const tatkalBook=new Promise((resolve,reject) =>{
//     let bookingSuccess=true
//     if(bookingSuccess)
//         resolve(850)
//     else
//         reject()
// })



function tatkalBook(){
    return new Promise((resolve, reject) => {
      let bookingSuccess = false;
      if (bookingSuccess) 
        resolve(850);
      else 
        reject();
    });
}


tatkalBook().then((amt) => console.log(`Thanks buddy! I have transferred Rs.${amt}`))

  .catch(()=>console.log("Thanks for Trying!  I will book a Bus"));  //catch for reject meaning

// function success(){
//     console.log("Thanks buddy! I will transfer the amount")
// }

// function failure(){
//     console.log("Thanks for Trying!  I will book a Bus");
// }


//Example 2
// function tossCoin(){
//   return new Promise((resolve,reject)=>{
//   //0- head ,1- tail(failure)
//        const rand=Math.floor(Math.random()*2)
//        if(rand==0)
//         resolve()
//       else
//         reject()

//   })
// }

//tossCoin()
// .then(()=>console.log("Congrats! Its head! You won"))
// .catch(()=>console.log("Sorry! You lost ! Its Tail"))

//Example 3
let reachA = new Promise((resolve, reject) => {
  const reached = true;

  if (reached) setTimeout(resolve, 3000, "Vidya Reached");
  else reject("Vidya not reached");
});

let reachB = new Promise((resolve, reject) => {
  const reached = true;

  if (reached) setTimeout(resolve, 1000, "Ramya Reached");
  else reject("Ramya not reached");
});

let reachC = new Promise((resolve, reject) => {
  const reached = true;

  if (reached) setTimeout(resolve, 2000, "Sara Reached");
  else reject("Sara not reached");
});


//promise-pending,resolved,rejected  this are three (settled)
Promise.allSettled([reachA, reachB, reachC])
  .then((message) => console.log(message))
  .catch((message) => console.log(message));
